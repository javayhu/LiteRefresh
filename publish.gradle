/*
 * Copyright 2016 Commit 451
 * Copyright 2018 yinpinjiu@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

version = '0.10.3'
group = 'com.androidpi'

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    options {
        encoding 'UTF-8'
        charSet 'UTF-8'
        locale 'en'
    }
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

def pomConfig = {
    scm {
        connection 'scm:git:git@github.com:jastrelax/LiteRefresh.git'
        developerConnection 'scm:git:git@github.com:jastrelax/LiteRefresh.git'
        url 'https://github.com/jastrelax/LiteRefresh'
    }

    licenses {
        license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }

    developers {
        developer {
            id 'jastrelax'
            name 'PinJiu Yin'
            email 'yinpinjiu@gmail.com'
        }
    }
}

publishing {
    publications {
        Production(MavenPublication) {
//            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
//            artifact sourcesJar
//            artifact javadocJar

            groupId this.group
            artifactId archivesBaseName
            version this.version

            pom {
                packaging = 'aar'
            }

            pom.withXml {
                def root = asNode()
                root.appendNode('name', project.ext.projectName)
                root.appendNode('description', project.ext.projectDescription)
                root.appendNode('url', project.ext.projectUrl)
                def dependenciesNode = root.appendNode('dependencies')
                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
                root.children().last() + pomConfig
            }
        }
    }
}

def localProperties = new Properties()
rootProject.file("local.properties").withInputStream {
    stream ->
        localProperties.load(stream)
}

bintray {
    user = localProperties['bintray.user']
    key = localProperties['bintray.api.key']

    publications = ['Production']
    configurations = ['archives']
    override = true
    publish = true
    dryRun = true

    pkg {
        repo = 'maven'
        name = "${this.group}:${this.archivesBaseName}"
        desc = project.ext.projectDescription
        publicDownloadNumbers = false
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/jastrelax/LiteRefresh.git'
        websiteUrl = 'https://github.com/jastrelax/LiteRefresh'

        githubRepo = 'jastrelax/LiteRefresh'

        version {
            name = this.version
            desc = "${project.ext.projectName} ${this.version}"
            released = new Date()
            vcsTag = this.version

            gpg {
                sign = true
                passphrase = localProperties['signing.password']
            }

            //Configuration for Maven Central sync of the version
            mavenCentralSync {
                sync = false
                user = localProperties['sonatype.ossrh.user']
                password = localProperties['sonatype.ossrh.passwd']
                close = '0'
            }
        }
    }
}

bintrayUpload.mustRunAfter('assembleRelease','generatePomFileForProductionPublication','sourcesJar', 'javadocJar')

task upload {
    dependsOn 'generatePomFileForProductionPublication'
    dependsOn 'sourcesJar'
    dependsOn 'javadocJar'
    dependsOn 'assembleRelease'
    dependsOn 'bintrayUpload'
    group 'publishing'
}
